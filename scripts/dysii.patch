diff -Naur ../../dysii-1.4.0/CMakeLists.txt BrainID-Dependencies-Build/dysii-1.4.0/CMakeLists.txt
--- ../../dysii-1.4.0/CMakeLists.txt	1970-01-01 00:00:00.000000000 +0000
+++ BrainID-Dependencies-Build/dysii-1.4.0/CMakeLists.txt	2009-04-04 23:59:59.000000000 +0000
@@ -0,0 +1,37 @@
+cmake_minimum_required(VERSION 2.6)
+SET(CMAKE_VERBOSE_MAKEFILE)
+INCLUDE (CheckIncludeFiles)
+
+PROJECT(dysii)
+
+CHECK_INCLUDE_FILES(math.h HAVE_MATH_H)
+
+IF(NOT HAVE_MATH_H)
+    MESSAGE(FATAL_ERROR "You need to have math.h")
+ENDIF()
+
+find_path(GSL include/gsl lib/libgsl.a)
+find_path(MPI include/mpi.h lib/libmpi.la)
+find_path(BOOST include/boost/numeric/ublas/vector.h
+    include/boost/numeric/ublas/matrix.hpp 
+    include/boost/numeric/bindings/traits/ublas_vector.hpp
+    include/boost/numeric/bindings/traits/ublas_matrix.hpp
+    include/boost/serialization/serialization.hpp lib/boost/)
+
+AUX_SOURCE_DIRECTORY(src/indii/ml/aux SOURCES )
+AUX_SOURCE_DIRECTORY(src/indii/ml/data SOURCES )
+AUX_SOURCE_DIRECTORY(src/indii/ml/filter SOURCES )
+AUX_SOURCE_DIRECTORY(src/indii/ml/ode SOURCES )
+AUX_SOURCE_DIRECTORY(src/indii/ml/sde SOURCES )
+
+INCLUDE_DIRECTORIES(${GSL}/include ${MPI}/include ${BOOST}/include)
+
+ADD_LIBRARY(dysii STATIC ${SOURCES})
+
+INSTALL(TARGETS dysii LIBRARY ARCHIVE DESTINATION lib/)
+
+INSTALL(DIRECTORY src/indii DESTINATION include
+    FILES_MATCHING PATTERN "*.hpp")
+
+SET(dysii_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/src)
+SET(dysii_LIBRARY_DIRS ${CMAKE_CURRENT_SOURCE_DIR})
diff -Naur ../../dysii-1.4.0/UseDysii.cmake BrainID-Dependencies-Build/dysii-1.4.0/UseDysii.cmake
--- ../../dysii-1.4.0/UseDysii.cmake	1970-01-01 00:00:00.000000000 +0000
+++ BrainID-Dependencies-Build/dysii-1.4.0/UseDysii.cmake	2009-04-04 23:59:59.000000000 +0000
@@ -0,0 +1,16 @@
+#   This file will permit you to add dysii to your project using
+#   FIND_PACKAGE(dysii REQUIRED)
+#   INCLUDE(${dysii_include} ${dysii_lib})
+#
+
+if(NOT dysii_USE_FILE_INCLUDED)
+    set(dysii_USE_FILE_INCLUDED 1)
+
+    # Add include directories needed to use dysii.
+    include_directories(${dysii_INCLUDE_DIRS})
+
+    # Add link directories needed to use KWWidgets.
+    link_directories(${dysii_LIBRARY_DIRS})
+
+endif(NOT dysii_USE_FILE_INCLUDED)
+
diff -Naur ../../dysii-1.4.0/src/indii/ml/filter/ParticleFilter.hpp BrainID-Dependencies-Build/dysii-1.4.0/src/indii/ml/filter/ParticleFilter.hpp
--- ../../dysii-1.4.0/src/indii/ml/filter/ParticleFilter.hpp	2008-12-17 15:15:27.000000000 +0000
+++ BrainID-Dependencies-Build/dysii-1.4.0/src/indii/ml/filter/ParticleFilter.hpp	2009-04-07 22:34:07.000000000 +0000
@@ -88,7 +88,7 @@
    */
   void resample(ParticleResampler* resampler);
 
-private:
+protected:
   /**
    * Model.
    */
diff -Naur ../../dysii-1.4.0/src/indii/ml/filter/ParticleFilterModel.hpp BrainID-Dependencies-Build/dysii-1.4.0/src/indii/ml/filter/ParticleFilterModel.hpp
--- ../../dysii-1.4.0/src/indii/ml/filter/ParticleFilterModel.hpp	2008-12-17 15:15:27.000000000 +0000
+++ BrainID-Dependencies-Build/dysii-1.4.0/src/indii/ml/filter/ParticleFilterModel.hpp	2009-04-07 22:31:38.000000000 +0000
@@ -51,8 +51,8 @@
    * @return \f$f(\mathbf{s}, \mathbf{w}, \Delta t)\f$; propagation of
    * the particle through the transition function, with noise.
    */
-  virtual indii::ml::aux::vector transition(const indii::ml::aux::vector& s,
-      const T t, const T delta) = 0;
+  virtual void transition(indii::ml::aux::vector& s,
+      const T t, const T delta) = 0;
 
   /**
    * Apply the measurement function to an individual particle.
